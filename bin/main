#!/usr/bin/env ruby
first_row = ["_", "_", "_"]
second_row = ["_", "_", "_"]
third_row = ["_", "_", "_"]

board = [first_row, second_row, third_row]


def welcome
    puts "Welcome to the Tic Tac Toe game!"
    puts "do you want to proceed? (y/n)"
    user_answer = gets.chomp.downcase
    if user_answer.match(/y/)
        return true
    elsif user_answer.match(/n/)
        puts "bye"
        return false
    else
        puts "wrong answer"
        welcome
    end
end

def instructions
 puts "Instructions:\n 1)The game is played on a grid that's 3 squares by 3 squares.\n
 2)Write a letter from A to C and a number from 1 to 3 to select the row and the column respectively that you want to play on.\n
 3)Player 1 is X, player 2 is O.\n
 4)Once a player gets 3 marks in a row (up, down, across, or diagonally) is the winner.\n
 5)If all 9 squares are full, the game is over \n \n"
 
end

def players_setting
    puts "Okay master! May I have first player's name?"
    user_answer = gets.chomp
    #some validation
    player_one  = user_answer
    puts "cool! what about second player's name?"
    user_answer = gets.chomp
    #some validation
    player_two = user_answer
end

def game
    puts "Write a letter from A to C and a number from 1 to 3"
    payer_call = gets.chomp.upcase
    if payer_call.include? "A"
        if payer_call.include? "1"
          board_matrix
          #board[0][0] = "X"
          #board(A,1)
          board
        elsif payer_call.include? "2"
            board[0][1] = "X"
        elsif payer_call.include? "3"
            board[0][2] = "X"
        else
            #wrong input
        end
    elsif payer_call.include? "B"
        if payer_call.include? "1"
            board[1][0] = "X"
          elsif payer_call.include? "2"
              board[1][1] = "X"
          elsif payer_call.include? "3"
              board[1][2] = "X"
          else
              #wrong input
          end
    elsif payer_call.include? "C"
        if payer_call.include? "1"
            board[2][0] = "X"
          elsif payer_call.include? "2"
              board[2][1] = "X"
          elsif payer_call.include? "3"
              board[2][2] = "X"
          else
              #wrong input
          end
    else 
        puts "Please write a letter from A to C followed by a number from 1 to 3"
    end
end

def board_matrix
    puts "#{board[0][0]} #{board[0][1]} #{board[0][2]}"
    puts "#{board[1][0]} #{board[1][1]} #{board[1][2]}"
    puts "#{board[2][0]} #{board[2][1]} #{board[2][2]}"
end

def round
    if current_player = player_one
       current_player = player_two
    else
        current_player = player_one

    game_finish
end
# game starts
while 1 
    #welcome
    break unless welcome
    instructions
    players_setting
    board_matrix
    game
    board_matrix
end 

